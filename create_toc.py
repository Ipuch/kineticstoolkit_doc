#!/usr/bin/env python3

"""
Tranform toc.md into _toc.yml by adding the required "chapters:" and "sections:"
keywords and by stripping hypertext markdown syntax.
"""

TAB_LENGTH = 4


def write_line(destination, string):
    try:
        destination.writelines(
            [
                string.replace("[", "")
                .replace("]", "")
                .replace("(", "")
                .replace(")", "")
            ]
        )
    except AttributeError:
        pass
        
    
def is_bullet_line(string):
    if len(string) == 0:
        return False
    try:    
        return string.replace(" ", "")[0] == "-"
    except AttributeError:
        return False

    
def get_indent_level(string):
    return len(string.split('-')[0]) // TAB_LENGTH


current_section = ""
with open("src/toc.md", "r") as source:
    with open("src/_toc.yml", "w") as destination:
        destination.writelines(
            [
                "# This file is automatically generated by update_toc.py.\n",
                "# from toc.md. Please edit toc.md and not this file.\n",
            ]
        )
        current_index = 0

        thisline = source.readline()

        # Parse the outline
        while thisline:

            write_line(destination, thisline)

            nextline = source.readline()
            buffer = []
            while nextline and (is_bullet_line(nextline) is False):
                buffer.append(nextline)
                nextline = source.readline()
            for item in buffer:
                write_line(destination, item)

            if "- caption:" in thisline:
                current_section = "part"
            elif "- file:" in thisline:
                current_section = "file"

            if get_indent_level(nextline) <= get_indent_level(thisline):
                pass
            elif current_section == "part":
                write_line(destination, "  chapters:\n")
            elif current_section == "file":
                write_line(
                    destination,
                    " " * TAB_LENGTH * get_indent_level(thisline) + "  sections:\n"
                )
            else:
                raise ValueError("Should not happen.")
                

            thisline = nextline
